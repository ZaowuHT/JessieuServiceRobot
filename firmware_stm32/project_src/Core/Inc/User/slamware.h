#ifndef SLAMWARE_H
#define SLAMWARE_H

#include "system.h"

// SLAMWARE相关常量声明区域

#define SLAMWARE_RECIEVE_BUFFER_SIZE 512
#define SLAMWARE_SEND_BUFFER_SIZE 512
#define SLAMWARE_USART_BAUD 115200L

#define SLAMWARE_TX_GPIO_GROUP GPIOB
#define SLAMWARE_TX_GPIO_ID GPIO_PIN_10
#define SLAMWARE_RX_GPIO_GROUP GPIOB
#define SLAMWARE_RX_GPIO_ID GPIO_PIN_11

#define SLAMWARE_CMD_GPIO_GROUP GPIOE
#define SLAMWARE_CMD_GPIO_ID GPIO_PIN_14
#define SLAMWARE_BUSY_GPIO_GROUP GPIOE
#define SLAMWARE_BUSY_GPIO_ID GPIO_PIN_15

#define SLAMWARE_STATE_DISCONNECTED 0
#define SLAMWARE_STATE_CONNECTED 1
#define SLAMWARE_STATE_OK 2
#define SLAMWARE_STATE_LIDAR_FAIL 3
#define SLAMWARE_STATE_RESETWIFI 4
#define SLAMWARE_STREAM_STATE_WAITFORHEAD 0
#define SLAMWARE_STREAM_STATE_WAITFORLENGTH 1
#define SLAMWARE_STREAM_STATE_WAITFORPAYLOAD 2

#define SLAMWARE_STREAM_REQ_NORMAL_HEAD 0x10
#define SLAMWARE_STREAM_REQ_LONG_HEAD 0x50
#define SLAMWARE_STREAM_REQ_CONNECT_BASE 0x10
#define SLAMWARE_STREAM_REQ_GET_BASE_CONF 0x20
#define SLAMWARE_STREAM_REQ_GET_BINARY_CONF 0x21
#define SLAMWARE_STREAM_REQ_GET_BASE_STATUS 0x30
#define SLAMWARE_STREAM_REQ_GET_BASE_MOTOR_DATA 0x31
#define SLAMWARE_STREAM_REQ_GET_BASE_SENSOR_DATA 0x32
#define SLAMWARE_STREAM_REQ_GET_BASE_BUMPER_DATA 0x33
#define SLAMWARE_STREAM_REQ_GET_AUTO_HOME_DATA 0x34
#define SLAMWARE_STREAM_REQ_GET_AUXILIARY_ANCHOR 0x35
#define SLAMWARE_STREAM_REQ_SET_BASE_MOTOR 0x40
#define SLAMWARE_STREAM_REQ_SET_V_AND_GET_DEADRECKON 0x41
#define SLAMWARE_STREAM_REQ_POLL_BASE_CMD 0x50
#define SLAMWARE_STREAM_REQ_POLL_BASE_ANS_CMD 0x5f
#define SLAMWARE_STREAM_REQ_SEND_EVENT 0x60
#define SLAMWARE_STREAM_REQ_HEALTH_MGMT 0x90

#define SLAMWARE_STREAM_RESP_SYNC 0x00
#define SLAMWARE_STREAM_RESP_ECHO 0x01
#define SLAMWARE_STREAM_RESP_OK 0x02
#define SLAMWARE_STREAM_RESP_ERROR 0x03
#define SLAMWARE_STREAM_RESP_INVALID 0xff

#define USART3_STREAM_HANDLER(x) Slamware_DataHandler(x)
#define USART3_STREAM_BUFFER slamwareRecieveBuffer

// USART相关声明区域: USART3

extern UART_HandleTypeDef huart3;
extern uint8_t slamwareRecieveBuffer[SLAMWARE_RECIEVE_BUFFER_SIZE];
extern uint8_t slamwareSendBuffer[SLAMWARE_SEND_BUFFER_SIZE];

// Slamware数据与方法声明区域

extern uint8_t slamwareState;

void Slamware_Init(void);
void Slamware_DataHandler(uint8_t* dataStream);

#endif
